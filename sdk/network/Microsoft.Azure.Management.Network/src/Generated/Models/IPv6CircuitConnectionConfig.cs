// <auto-generated>
// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License. See License.txt in the project root for
// license information.
//
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Azure.Management.Network.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class IPv6CircuitConnectionConfig
    {
        /// <summary>
        /// Initializes a new instance of the IPv6CircuitConnectionConfig
        /// class.
        /// </summary>
        public IPv6CircuitConnectionConfig()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the IPv6CircuitConnectionConfig
        /// class.
        /// </summary>
        /// <param name="addressPrefix">/125 IP address space to carve out
        /// Customer addresses for Global Reach.</param>
        /// <param name="circuitConnectionStatus">Express Route Circuit
        /// connection state. Possible values include: 'Connected',
        /// 'Connecting', 'Disconnected'</param>
        public IPv6CircuitConnectionConfig(string addressPrefix = default(string), string circuitConnectionStatus = default(string))
        {
            AddressPrefix = addressPrefix;
            CircuitConnectionStatus = circuitConnectionStatus;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets /125 IP address space to carve out Customer addresses
        /// for Global Reach.
        /// </summary>
        [JsonProperty(PropertyName = "addressPrefix")]
        public string AddressPrefix { get; set; }

        /// <summary>
        /// Gets or sets express Route Circuit connection state. Possible
        /// values include: 'Connected', 'Connecting', 'Disconnected'
        /// </summary>
        [JsonProperty(PropertyName = "circuitConnectionStatus")]
        public string CircuitConnectionStatus { get; set; }

    }
}
